1. Настраиваем взаимодействия с ЯО через API
   curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
   echo 'source /home/aster/yandex-cloud/completion.zsh.inc' >>  ~/.zshrc
   source "/home/aster/.bashrc"
   yc init
   yc vpc network list
  
2.  Создаем ВМ  в ЯО
[aster@cobra .ssh]$ yc compute instance create \
>   --name pg202324 \
>   --hostname pg202324 \
>   --cores 2 \
>   --memory 2 \
>   --create-boot-disk size=15G,type=network-ssd,image-folder-id=standard-images,image-family=ubuntu-2204-lts \
>   --network-interface subnet-name=default-ru-central1-b,nat-ip-version=ipv4 \
>   --zone ru-central1-b \
>   --metadata-from-file ssh-keys=/home/aster/.ssh/id_rsa.pub
done (29s)
id: epdc1g8c45ues4ml6mhr
folder_id: b1g5e9p5c3vmkihgsm15
created_at: "2023-05-02T08:50:10Z"
name: pg202324
zone_id: ru-central1-b
platform_id: standard-v2
resources:
  memory: "2147483648"
  cores: "2"
  core_fraction: "100"
status: RUNNING
metadata_options:
  gce_http_endpoint: ENABLED
  aws_v1_http_endpoint: ENABLED
  gce_http_token: ENABLED
  aws_v1_http_token: DISABLED
boot_disk:
  mode: READ_WRITE
  device_name: epdcm3fsk2mur4lhjlg7
  auto_delete: true
  disk_id: epdcm3fsk2mur4lhjlg7
network_interfaces:
  - index: "0"
    mac_address: d0:0d:c0:c1:0c:21
    subnet_id: e2lr70q6ek9nk5kq4b83
    primary_v4_address:
      address: 10.129.0.37
      one_to_one_nat:
        address: 158.160.19.172
        ip_version: IPV4
gpu_settings: {}
fqdn: pg202324.ru-central1.internal
scheduling_policy: {}
network_settings:
  type: STANDARD
placement_policy: {}

  
  
  
3.  Заходим на ВМ и устанавливаем постгрес 
   sudo apt update && sudo apt upgrade
    sudo apt-cache search postgresql | grep postgresql
    sudo apt -y install postgresql-14

     
aster@pg202324:~$ systemctl status postgresql
● postgresql.service - PostgreSQL RDBMS
     Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor pr>
     Active: active (exited) since Tue 2023-05-02 10:02:23 UTC; 35s ago
    Process: 55536 ExecStart=/bin/true (code=exited, status=0/SUCCESS)
   Main PID: 55536 (code=exited, status=0/SUCCESS)
        CPU: 1ms
lines 1-6/6 (END)

aster@pg202324:~$ 
aster@pg202324:~$ sudo -u postgres psql -c "SELECT version();"
could not change directory to "/home/aster": Permission denied
postgres@pg202324:/usr/lib/postgresql/14/bin$ psql
psql (14.7 (Ubuntu 14.7-0ubuntu0.22.04.1))
Type "help" for help.

 
postgres=# \set AUTOCOMMIT off
postgres=# 
postgres=# 
postgres=# create table persons(id serial, first_name text, second_name text);
CREATE TABLE
postgres=*# insert into persons(first_name, second_name) values('ivan', 'ivanov');
INSERT 0 1
postgres=*# insert into persons(first_name, second_name) values('petr', 'petrov');
INSERT 0 1
postgres=*# commit;
COMMIT
postgres=# show transaction isolation level
postgres-# ;
 transaction_isolation 
-----------------------
 read committed
(1 row)

Селектим  в другой сессии уровнем иоляции - read commited 
До коммита в первой читаем
postgres=*# select * from persons;
 id | first_name | second_name 
----+------------+-------------
  6 | ivan       | ivanov
  7 | petr       | petrov
(2 rows)

После коммита в первой сессии - читаем таблицу и получаем все прошедшие инсерты из первой сессии
postgres=*# select * from persons;
 id | first_name | second_name 
----+------------+-------------
  6 | ivan       | ivanov
  7 | petr       | petrov
  8 | sergey     | sergeev
(3 rows)
выходим из сессий

запускаем сессии вновь
устанавливаем уровень изоляции повторяемого чтения и инсертим строку 
postgres=# set transaction isolation level repeatable read;
SET
postgres=*# insert into persons(first_name, second_name) values('sveta', 'svetova');
INSERT 0 1

до коммита в первой сессии
postgres=*#  select * from persons;
 id | first_name | second_name 
----+------------+-------------
  6 | ivan       | ivanov
  7 | petr       | petrov
  8 | sergey     | sergeev
(3 rows)

после коммита в первой сессии
postgres=*#  select * from persons;
 id | first_name | second_name 
----+------------+-------------
  6 | ivan       | ivanov
  7 | petr       | petrov
  8 | sergey     | sergeev
(3 rows)

После перезахода видим добавленную строку
postgres=*#  select * from persons;
 id | first_name | second_name 
----+------------+-------------
  6 | ivan       | ivanov
  7 | petr       | petrov
  8 | sergey     | sergeev
  9 | sveta      | svetova
(4 rows)

